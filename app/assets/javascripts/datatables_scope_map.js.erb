var DataTablesFilterMap = function() {

  return {
    Employer : {
      all: [ "all_employer_profiles" ],
      enrolling: {
        "all": [ "employer_profiles_enrolling" ],
        "initial eligible": [ "employer_profiles_enrolling", "employer_profiles_initial_eligible" ],
        "renewing": [ "employer_profiles_enrolling", "employer_profiles_renewing" ],
        "open enrollment": [ "employer_profiles_enrolling", "employer_profiles_open_enrollment" ],
        "binder pending": [ "employer_profiles_enrolling", "employer_profiles_binder_pending" ],
        "binder paid": [ "employer_profiles_enrolling", "employer_profiles_binder_paid" ],
        "<%= "#{(TimeKeeper.date_of_record.next_month.beginning_of_month).strftime('%B')} #{TimeKeeper.date_of_record.next_month.beginning_of_month.year}" %>": [ "employer_profiles_enrolling", "employer_profile_plan_year_start_on(<%= TimeKeeper.date_of_record.next_month.beginning_of_month %>)" ],
        "<%= "#{(TimeKeeper.date_of_record.next_month.beginning_of_month.next_month).strftime('%B')} #{TimeKeeper.date_of_record.next_month.beginning_of_month.next_month.year}" %>": [ "employer_profiles_enrolling", "employer_profile_plan_year_start_on(<%= TimeKeeper.date_of_record.next_month.beginning_of_month.next_month %>)" ],
        "<%= "#{(TimeKeeper.date_of_record.next_month.beginning_of_month.next_month.next_month).strftime('%B')} #{TimeKeeper.date_of_record.next_month.beginning_of_month.next_month.next_month.year}" %>": [ "employer_profiles_enrolling", "employer_profile_plan_year_start_on(<%= TimeKeeper.date_of_record.next_month.beginning_of_month.next_month.next_month %>)" ],
        "custom_date": ["employer_profiles_enrolling", "employer_profiles_by_date_range"]
      },
      enrolled: {
        "all": [ "employer_profiles_enrolled" ],
        "suspended": [ "employer_profiles_enrolled", "employer_profiles_suspended" ]
      },
      applicants: {
        "all": [ "employer_profiles_applicants" ],
        "initial ineligible": [ "employer_profiles_applicants", "employer_profiles_ineligible" ]
      }
    },
    Broker : {
      all: [ "all_broker_quotes('"+$('[data-broker-id]').data('broker-id')+"')" ],
      draft: [ "all_broker_quotes('"+$('[data-broker-id]').data('broker-id')+"')", "draft_quotes" ],
      published: [ "all_broker_quotes('"+$('[data-broker-id]').data('broker-id')+"')", "published" ],
      claimed: [ "all_broker_quotes('"+$('[data-broker-id]').data('broker-id')+"')", "claimed_quotes" ]
    }
  };
};
