- is_new_benefit = @sponsored_benefit_form.is_new_benefit
= f.hidden_field :is_new_benefit, value: f.object.is_new_benefit

- if !is_new_benefit && !is_new_benefit.nil?
    #scEdit
        = f.fields_for :sponsor_contribution, f.object.sponsor_contribution, errors: {}, fieldset: false do |sc|
            = render "./ui-components/v1/cards/dental_sponsor_contributions", sc: sc
    br
    br

- if !is_new_benefit && !is_new_benefit.nil?

    #referencePlanEdit
        = render "./ui-components/v1/cards/reference_plan", f: f
        i.fas.fa-info-circle.mr-1
        | Your final monthly cost is based on final enrollment.
    br
    br

#metal-level-select.card style="margin-bottom:20px"
	.card-body
		ul.nav.nav-tabs role="tablist"
            - aca_dental_plan_options.each do |option_kind|
    			li.col-md-4.col-sm-4 role="presentation" onclick="MetalLevelSelect.radioSelected(this);MetalLevelSelect.setPlanOptionKind(this);"
    				a href="##{option_kind}" aria-controls="dentalPlan" role="tab" data-toggle="tab" data-name="#{option_kind}"
                        i.far.fa-circle.mr-2
                        = aca_plan_option_titles[option_kind.to_sym]
    				    / = f.radio_button :product_package_kind, option_kind, checked: true, class: 'product_package_kind mr-1 hidden'
    	.tab-content
            - aca_dental_plan_options.each do |option_kind|
                .tab-pane.fade id=option_kind role="tabpanel"
        			h4 = aca_dental_plan_option_descriptions[option_kind.to_sym]
        			br
        			- @sponsored_benefit_form.catalog.plan_options_for(option_kind.to_sym).each do |identifier, product|
                        - if option_kind == 'multi_product'
            				.col-xs-4.plans.multiProductOptions
            					.col-xs-12.p0.mb-1
                                    .col-xs-12
                                        label.container
                                            = check_box_tag "sponsored_benefits[elected_product_choices][]", product.id, true
                                            span.checkmark
                                            p.heading-text.reference-plan-title.mb-1
                                                = product.title
                                            span.plan-label Type:
                                            span.rp-plan-info= product.product_type
                                            br/
                                            span.plan-label Carrier:
                                            span.rp-plan-info= product.carrier_name
                                            br/
                                            span.plan-label Level:
                                            span.rp-plan-info= product.metal_level_kind
                                            br/
                                            span.plan-label Network:
                                            span.rp-plan-info= product.network
                                            br/
                                            span.checkmark
                        - else
                            .col-xs-3.plans
                                .col-xs-12 style="min-height:130px"
                                    label.container
                                        = f.radio_button :product_option_choice, identifier, :data => {name: product.carrier_name}, onclick:"MetalLevelSelect.getPlanInfo(this);"
                                        span.checkmark
                                        = product.carrier_name

        .col-xs-12.select_choice_reference_plan.hidden
            .col-xs-6.text-center
              h4.di After selecting offered plans, click "Select Reference Plan"
            .col-xs-3.text-center
              span.btn.btn-default onclick="MetalLevelSelect.getPlanInfo(this);" Select Reference Plan

        #referencePlans.hidden
            .row
                h2.heading-text.pull-left.pl-1 Select Your Reference Plan

        	h4 Now select a reference plan. The reference plan is used to cap employer costs. Youâ€™ll choose a reference plan. Then, your contribution towards employee premiums will be applied to the reference plan you choose regardless of which plans your employees select. After you select your reference plan, scroll down to review your costs.

            #yourPlans
                .float-right.mb-2
                    #yourPlanTotals
                    br

            #yourSponsorContributions
            #yourReferencePlanDetails

/ = render "products"
= render "employee_costs_modal"

- if !is_new_benefit && !is_new_benefit.nil?
  javascript:
    window.onload = function() {
      document.getElementById('metal-level-select').classList.add('hidden');
      MetalLevelSelect.loadEmployeeCosts();
    }


javascript:
  window.MetalLevelSelect_ReferencePlanDetailsShell = '#{escape_javascript(render :partial => "./ui-components/v1/cards/reference_plan_details_shell")}'
  window.MetalLevelSelect_SponsorContributionsShell = '#{escape_javascript(render :partial => "./ui-components/v1/cards/sponsor_contributions_shell")}';
  window.productOptionKind = 'single_issuer';
  window.sponsorContribution = [];
  window.filteredProducts = [];
  window.employeeCostEstimate = #{@sponsored_benefit_form.employees_cost.to_json.html_safe};
  window.planOptions = #{@sponsored_benefit_form.catalog.plan_options.to_json.html_safe};
  window.applicationStartOn = #{@sponsored_benefit_form.benefit_application.effective_period.min.strftime("%m-%d").to_json.html_safe};
  window.referencePlanID = String;
  window.erCL = #{aca_shop_market_employer_contribution_percent_minimum};
  window.erDentalCL = #{aca_shop_market_employer_dental_contribution_percent_minimum};
  window.familyCL = #{aca_shop_market_employer_family_contribution_percent_minimum};
  window.sponsorContributions = #{@sponsored_benefit_form.catalog.sponsor_contributions(@sponsored_benefit_form.benefit_package_id).to_json.html_safe};
  window.tempContributionValues = {
    eeContribution: 0,
    spouse: 0,
    domesticPartner: 0,
    childUnder26: 0
  }

  window.onload = function() {
    MetalLevelSelect.disableNewPlanYearButton();
  }
