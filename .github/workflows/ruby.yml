name: Rspec and Cucumbers
on: push

env: # https://stackoverflow.com/questions/59867124/how-can-i-access-github-action-environment-variables-within-a-bash-script-run-by
  SHA: ${{ github.sha }}
  BRANCH: ${{ github.ref }}
  YELLR_KEY: ${{ secrets.YELLR_KEY }}
  YELLR_URL: ${{ secrets.YELLR_URL }}
  TEST_BOOSTERS_RSPEC_TEST_FILE_PATTERN: '{spec,components/benefit_markets/spec,components/benefit_sponsors,components/notifier,components/sponsored_benefits,components/transport_gateway,components/transport_profiles}/**/*_spec.rb'

jobs:
  testing_matrix:
    name: ${{matrix.command_configs.name}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        node: [10]
        mongodb-version: ["3.6"]
        command_configs:
          - name: cucumber debugging
            test_command: |
              cat config/cucumber.yml
              export DISPLAY=:99
              if cucumber_booster --job 1/4 features
              then
                echo "Cucumber passed the first time!"
                exit 0
              else
                cat config/cucumber.yml
                ls -ltr && ls -ltr tmp
                echo "catting rerun.txt"
                cat rerun.txt
                echo "Give cucumber one more try"
                if bundle exec cucumber @rerun.txt --profile first_rerun
                then
                  echo "Cucumber worked on retry"
                  exit 0
                else
                  echo "Give cucumber yet another try"
                  bundle exec cucumber @tmp/cucumber_failures_2.log --profile second_rerun
                fi
              fi
            needs_chromedriver: true
    steps:
    - name: Set up Ruby 2.5.1
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.5.1
    - name: Setup Node.js for use with actions
      uses: actions/setup-node@v1.1.0
      with:
        # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0, lts
        version: 10.16.3
    - name: Launch MongoDB
      uses: wbari/start-mongoDB@v0.2
      with:
        mongoDBVersion: ${{ matrix.mongodb-version }}
    - uses: actions/checkout@v2
    - name: Set up Chromedriver
      if: matrix.command_configs.needs_chromedriver
      uses: nanasess/setup-chromedriver@master
      with:
        # Optional: do not specify to match Chrome's version
        chromedriver-version: '77.0.3865.40'
    - name: Cache Gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
    - name: Cache Node Modules
      id: npm-cache
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
    - name: Build semaphore_cucumber_booster_config
      run: |
        echo 'test'
    - name: bundle install
      run: |
        gem update --system
        gem install bundler -v '2.0.1'
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        ls vendor/bundle
        cp -r cucumber_booster_config vendor/bundle
        ls vendor/bundle/cucumber_booster_config
        ls vendor/bundle/cucumber_booster_config/pkg
        gem install vendor/bundle/cucumber_booster_config/pkg/semaphore_cucumber_booster_config-1.4.1.gem
        gem install semaphore_test_boosters
    - name: yarn install
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: |
        yarn install
    - name: run webpack
      run: |
        NODE_ENV=test RAILS_ENV=test ./bin/webpack
    - name: run tests
      run: ${{matrix.command_configs.test_command}}
    - name: tell Yellr if failed
      if: failure()
      run: 'curl -H "Content-Type: application/json" -H "X-API-Key: ${{ env.YELLR_KEY }}" -X POST ${{ env.YELLR_URL }} -d "{\"project\":\"enroll_dc\",\"branch\":\"${GITHUB_REF#refs/heads/}\",\"sha\":\"${{ env.SHA }}\",\"status\":\"failing\"}"'
  notify-of-success:
    runs-on: ubuntu-latest
    needs: [testing_matrix]
    steps:
    - name: Notify Yellr of success
      run: 'curl -H "Content-Type: application/json" -H "X-API-Key: ${{ env.YELLR_KEY }}" -X POST ${{ env.YELLR_URL }} -d "{\"project\":\"enroll_dc\",\"branch\":\"${GITHUB_REF#refs/heads/}\",\"sha\":\"${{ env.SHA }}\",\"status\":\"passing\"}"'
